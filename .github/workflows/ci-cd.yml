name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: linen-creek-438713-t1
  APP_NAME: web-app  # App name as per your deployment.yaml
  IMAGE_TAG: ${{ github.run_id }}
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Google Cloud SDK
        run: |
          curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-367.0.0-linux-x86_64.tar.gz
          tar -xvzf google-cloud-sdk-367.0.0-linux-x86_64.tar.gz
          ./google-cloud-sdk/install.sh

      - name: Update Google Cloud SDK
        run: |
          ./google-cloud-sdk/bin/gcloud components update

      - name: Install gke-gcloud-auth-plugin
        run: |
          ./google-cloud-sdk/bin/gcloud components install gke-gcloud-auth-plugin
      
      - name: Authenticate with GCP
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo "$GCP_SA_KEY" > $HOME/gcloud-service-key.json
          ./google-cloud-sdk/bin/gcloud auth activate-service-account --key-file=$HOME/gcloud-service-key.json
          ./google-cloud-sdk/bin/gcloud config set project $PROJECT_ID
          ./google-cloud-sdk/bin/gcloud auth configure-docker gcr.io

      - name: Delete All Docker Images
        run: |
          # List all images and delete them
          gcloud container images list --repository=gcr.io/$PROJECT_ID --format='get(name)' | while read -r image; do
            gcloud container images list-tags "$image" --format='get(digest)' | while read -r digest; do
              gcloud container images delete "$image@$digest" --quiet --force-delete-tags
            done
          done 

      - name: Build and Push Docker Image
        run: |
          gcloud auth configure-docker
          docker build --no-cache -t gcr.io/$PROJECT_ID/$APP_NAME:$IMAGE_TAG .
          docker push gcr.io/$PROJECT_ID/$APP_NAME:$IMAGE_TAG

      - name: Set up kubectl
        run: |
          ./google-cloud-sdk/bin/gcloud container clusters get-credentials my-cluster --zone us-central1-c --project $PROJECT_ID

      - name: Deploy to GKE
        run: |
          kubectl delete deployment web-app
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
